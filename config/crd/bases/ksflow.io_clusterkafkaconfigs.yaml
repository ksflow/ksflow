---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: clusterkafkaconfigs.ksflow.io
spec:
  group: ksflow.io
  names:
    kind: ClusterKafkaConfig
    listKind: ClusterKafkaConfigList
    plural: clusterkafkaconfigs
    shortNames:
    - ckc
    singular: clusterkafkaconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.topicPrefix
      name: Prefix
      type: string
    - jsonPath: .spec.configs.securityProtocol
      name: Protocol
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterKafkaConfig is the Schema for the clusterkafkaconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterKafkaConfigSpec defines the desired state of
              ClusterKafkaConfig
            properties:
              configs:
                description: Kafka Configs for connecting to the cluster.
                properties:
                  bootstrapServers:
                    description: The "bootstrap.servers" kafka config for connecting
                      to the cluster. For example "host1:port1,host2:port2".
                    pattern: ^([^,:]+):(\d+)(,([^,:]+):(\d+))*$
                    type: string
                  securityProtocol:
                    description: The "security.protocol" kafka config for connecting
                      to the cluster, must be "PLAINTEXT" or "SSL".
                    enum:
                    - PLAINTEXT
                    - SSL
                    type: string
                required:
                - bootstrapServers
                - securityProtocol
                type: object
              topicPrefix:
                description: 'Prefix assigned to every kafka topic, resulting a topic
                  format matching: "<my-kafkaCluster-topicPrefix>.<my-namespace>.<my-kafkaTopic-name>"'
                maxLength: 125
                pattern: ^[a-z]([-a-z0-9\.]*[a-z])?$
                type: string
            required:
            - configs
            - topicPrefix
            type: object
          status:
            description: ClusterKafkaConfigStatus defines the observed state
              of ClusterKafkaConfig
            properties:
              lastUpdated:
                format: date-time
                type: string
              message:
                type: string
              phase:
                description: ClusterKafkaConfigPhase defines the phase of the
                  ClusterKafkaConfig
                enum:
                - ""
                - Available
                - Failed
                - Deleting
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
